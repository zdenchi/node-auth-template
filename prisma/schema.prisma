generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model profiles {
  id         Int       @id
  firstname  String?
  middlename String?
  lastname   String?
  birthday   DateTime? @db.Date
  gender     String?
  country    String?
  city       String?
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  users      users     @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id                              Int              @id @default(autoincrement())
  username                        String?
  email                           String?          @unique
  email_verified_at               DateTime?        @db.Timestamptz(6)
  email_verification_token        String?
  email_verification_token_expire DateTime?        @db.Timestamptz(6)
  phone                           String?          @unique
  phone_verified_at               DateTime?        @db.Timestamptz(6)
  recovery_token                  String?
  recovery_token_expire           DateTime?        @db.Timestamptz(6)
  password                        String?          @default("")
  registration_ip                 String?
  registration_ua                 String?
  last_login_at                   DateTime?        @db.Timestamptz(6)
  last_login_ip                   String?
  last_login_ua                   String?
  role                            String           @default("USER")
  created_at                      DateTime         @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime?        @db.Timestamptz(6)
  status                          user_status?     @default(ACTIVE)
  phone_verification_token        String?
  phone_verification_token_expire DateTime?        @db.Timestamptz(6)
  provider                        String?
  profiles                        profiles?
  refresh_tokens                  refresh_tokens[]
}

model refresh_tokens {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  parent     String?
  revoked    Boolean   @default(false)
  user_id    Int?
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

enum user_status {
  INACTIVE
  ACTIVE
  BANNED
}
